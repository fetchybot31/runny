name: Worker Run
on:
  create:
    branches: 
      - job/*
jobs:
  build:
    runs-on: ubuntu-latest
    timeout-minutes: 60
    steps:
      - name: Print Current Job Name
        run: |
          echo "${GITHUB_REF#refs/heads/job/}"
          echo "JOB_NAME=${GITHUB_REF#refs/heads/job/}" >> $GITHUB_ENV
      - name: Get Repo
        run: |
          sudo chmod -R 777 /tmp
          mkdir -p /tmp/dest_repo_clone
          git clone https://${{ secrets.GH_WORKER_TOKEN}}@github.com/${{ secrets.GH_WORKER_USER}}/${{ secrets.GH_WORKER_MAIN_REPO}}.git /tmp/dest_repo_clone
      - name: Install OS Libraries
        run: |
          export $(xargs < /tmp/dest_repo_clone/.env)
          export DEBIAN_FRONTEND=noninteractive
          pip install -r /tmp/dest_repo_clone/requirements.txt
          sudo wget -qO /usr/share/keyrings/nextdns.gpg https://repo.nextdns.io/nextdns.gpg
          echo "deb [signed-by=/usr/share/keyrings/nextdns.gpg] https://repo.nextdns.io/deb stable main" | sudo tee /etc/apt/sources.list.d/nextdns.list
          sudo apt-get update && sudo apt-get install -y curl python3-dev build-essential ffmpeg apt-transport-https nextdns tor
          echo "ControlPort 9051" >> /etc/tor/torrc &&  echo "HashedControlPassword 16:AEBC98A6777A318660659EC88648EF43EDACF4C20D564B20FF244E81DF" >> /etc/tor/torrc && chmod 600 /etc/tor/torrc
          pip install playwright pytest-playwright
          playwright install chromium
          DEBIAN_FRONTEND=noninteractive playwright install-deps
          sudo chmod 777 /etc/hosts
          mkdir /tmp/dest_repo_clone/dnsblock
      - name: Run Job
        env:
          DYNO: true
        run: |
          export $(xargs < /tmp/dest_repo_clone/.env)
          sudo nextdns install -config ${{ env.NEXTDNS_CONFIG_ID}} -report-client-info -auto-activate
          sudo nextdns start && sudo nextdns activate
          python /tmp/dest_repo_clone/worker.py ${GITHUB_REF#refs/heads/job/}
      - name: Archive Folder
        if: always()
        run: |
          mv /tmp/dest_repo_clone/temp /tmp/temp_copy
          cp /etc/hosts /tmp/temp_copy
          zip -r /tmp/${{ env.JOB_NAME}}.zip /tmp/temp_copy
          rm -r /tmp/dest_repo_clone
      - name: Archive code coverage results
        if: always()
        uses: actions/upload-artifact@v3
        with:
          name: "${{ env.JOB_NAME }}"
          path: "/tmp/${{ env.JOB_NAME}}.zip"
          retention-days: 3